# GraphQL schema example
#
# https://gqlgen.com/getting-started/

# Queries and Types
type Barang {
  id: ID!
  nama: String!
  harga: Float!
  stock: Int!
  vendor: String!
  createdAt: String!
  updatedAt: String!
}

type User {
  id: ID!
  username: String!
  nama: String!
  password: String!
  role: String!
  email: String!
  phone: String!
  address: String!
  latlng: String!
  createdAt: String!
  updatedAt: String!
  lastLoginAt: String!
}

type Query {
  semuaBarang: [Barang!]!
  barangPakeId(id: ID!): Barang!
  semuaUser: [User!]!
  userPakeId(id: ID!): User!
}

# Mutations and Input
input BarangBaru {
  nama: String!
  harga: Float!
  stock: Int!
  vendor: String!
}

input UserBaru {
  username: String!
  nama: String!
  password: String!
  phone: String!
  role: String!
  email: String!
  address: String!
  latlng: String!
}

input EditUser {
  username: String!
  nama: String!
  phone: String!
  email: String!
  address: String!
  latlng: String!
}


input EditUserPassword {
  passwordLama: String!
  passwordBaru: String!
  
}

input LoginUser {
  username: String!
  password: String!
}

input RefreshTokenData {
  token: String!
}

type Mutation {
  buatBarang(input: BarangBaru!): Barang!
  editBarang(id: ID!, input: BarangBaru!): Barang!
  hapusBarang(id: ID!): Boolean!
  buatUser(input: UserBaru!): User!
  editUser(id: ID!, input: EditUser!): User!
  editUserPassword(id: ID!, input: EditUserPassword!): Boolean!
  hapusUser(id: ID!): Boolean!

  # Login
  loginUser(input: LoginUser!): String!

  # RefreshToken
  refreshToken(input: RefreshTokenData!): String!
}
